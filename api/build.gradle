plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
	id 'distribution'
    // id 'checkstyle'

}

apply plugin: 'application'
mainClassName = 'com.roborally.App'

// springBoot {
//     mainClassName = 'api.src.main.java.com.roborally.App'
// }

apply plugin: 'war'

group = 'com.roborally.App'
version = '0.0.1-SNAPSHOT'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.hibernate:hibernate-entitymanager:5.6.15.Final'
    
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.33'
    implementation project(':domain')
    implementation project(':database')
    // compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.3.RELEASE'
}


tasks.named('test') {
	useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.9
            }
        }
    }
}

// checkstyle {
//     toolVersion '7.8.1'
//     configFile file("../config/checkstyle/checkstyle.xml")
// }

// checkstyleMain {
//     source ='src/main/java'
// }
// checkstyleTest {
//     source ='src/test/java'
// }
